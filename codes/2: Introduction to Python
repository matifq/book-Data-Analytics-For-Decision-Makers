{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMDrqMyqhgDztC+mXuJy8OP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Variables and Data Types"],"metadata":{"id":"NGteqUPlbEuc"}},{"cell_type":"code","source":["# Variables and Data Types\n","x = 10            # Integer\n","y = 3.14          # Float\n","name = \"Python\"   # String\n","is_active = True  # Boolean\n","\n","# Check data type\n","print(type(x))    # Output: <class 'int'>\n","print(type(y))    # Output: <class 'float'>"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z2EyzFKJa_e5","executionInfo":{"status":"ok","timestamp":1727624150116,"user_tz":-60,"elapsed":271,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"ab6c440f-a910-42e6-b891-74e9786c7c3d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","<class 'float'>\n"]}]},{"cell_type":"markdown","source":["# Lists and Their Importance in High-Performance Computing"],"metadata":{"id":"Y_d-sWZObL98"}},{"cell_type":"code","source":["# List storing different types of data\n","my_list = [1, \"John Doe\", 3.14, True]\n","\n","print(type(my_list[0]))  # Output: <class 'int'>\n","print(type(my_list[1]))  # Output: <class 'str'>\n","print(type(my_list[2]))  # Output: <class 'float'>\n","print(type(my_list[3]))  # Output: <class 'bool'>"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-ilIIiKe0MQ","executionInfo":{"status":"ok","timestamp":1727625120758,"user_tz":-60,"elapsed":241,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"631ae013-1f54-4995-b817-5cc2391baeb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","<class 'str'>\n","<class 'float'>\n","<class 'bool'>\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TIO08vfvyRGs","executionInfo":{"status":"ok","timestamp":1727625131422,"user_tz":-60,"elapsed":334,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"7008d391-b2b7-441b-ffc1-ae7a5c3f7cf2"},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","[2, 3]\n","[1, 2, 10, 4, 5]\n","5\n","4\n"]}],"source":["# List and Slicing\n","my_list = [1, 2, 3, 4, 5]\n","print(my_list[0])      # Output: 1\n","print(my_list[1:3])    # Output: [2, 3]\n","my_list[2] = 10        # Modifies third element\n","print(my_list)         # Output: [1, 2, 10, 4, 5]\n","\n","# Negative Indexing\n","print(my_list[-1])     # Output: 5 (last element)\n","print(my_list[-2])     # Output: 4 (second to last element)"]},{"cell_type":"code","source":["# Example: Dividing sales data for parallel processing (conceptual)\n","# Assuming we have sales data as a list\n","sales_data = [100, 150, 200, 250, 300]\n","\n","# Divide the list between two processors for parallel processing (example)\n","processor_1_data = sales_data[:len(sales_data)//2]\n","processor_2_data = sales_data[len(sales_data)//2:]\n","\n","print(processor_1_data)  # Output: [100, 150]\n","print(processor_2_data)  # Output: [200, 250, 300]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"icMKMq--bRDk","executionInfo":{"status":"ok","timestamp":1727625145180,"user_tz":-60,"elapsed":274,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"dbeeb7b4-48ab-49f7-acb8-2ff75f3f9813"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[100, 150]\n","[200, 250, 300]\n"]}]},{"cell_type":"code","source":["monthly_sales = [\n","    [1000, 1200, 1300],  # Sales for Product A\n","    [900, 950, 1000],    # Sales for Product B\n","    [1100, 1150, 1200]   # Sales for Product C\n","]\n","\n","# Accessing nested list elements\n","print(monthly_sales[0][1])  # Output: 1200 (Sales for Product A in the second month)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nBBk47YGe7ff","executionInfo":{"status":"ok","timestamp":1727625159478,"user_tz":-60,"elapsed":266,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"20927983-1433-49b3-b3fc-90cb794481e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1200\n"]}]},{"cell_type":"markdown","source":["# Dictionaries"],"metadata":{"id":"6ilOIDa_pff7"}},{"cell_type":"code","source":["# Dictionary Example\n","person = {\"name\": \"John\", \"age\": 30}\n","print(person[\"name\"])    # Output: John\n","person[\"age\"] = 31       # Update value\n","print(person)            # Output: {'name': 'John', 'age': 31}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cbCFmCsEyUcy","executionInfo":{"status":"ok","timestamp":1727622565956,"user_tz":-60,"elapsed":13,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"10a3c877-0fd3-4e10-983e-6640c236fbad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["John\n","{'name': 'John', 'age': 31}\n"]}]},{"cell_type":"code","source":["# Storing customer profiles\n","customers = {\n","    \"C001\": {\"name\": \"Alice\", \"purchases\": [120, 340, 180]},\n","    \"C002\": {\"name\": \"Bob\", \"purchases\": [300, 400, 150]}\n","}\n","\n","# Accessing customer data\n","print(customers[\"C001\"][\"name\"])      # Output: Alice\n","print(customers[\"C002\"][\"purchases\"]) # Output: [300, 400, 150]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mVlaQW1fpoel","executionInfo":{"status":"ok","timestamp":1727627957676,"user_tz":-60,"elapsed":248,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"e9cc0ce2-6781-45b3-8ec1-02de9ad2e6e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice\n","[300, 400, 150]\n"]}]},{"cell_type":"code","source":["# Product inventory using dictionaries\n","inventory = {\n","    \"P001\": {\"name\": \"Laptop\", \"price\": 1000, \"stock\": 50},\n","    \"P002\": {\"name\": \"Phone\", \"price\": 600, \"stock\": 120}\n","}\n","\n","# Checking the stock of a specific product\n","print(inventory[\"P001\"][\"stock\"])  # Output: 50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gg3zypvgpsdd","executionInfo":{"status":"ok","timestamp":1727627973715,"user_tz":-60,"elapsed":384,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"b9efed85-79a1-498e-a500-5c97765b6c94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["50\n"]}]},{"cell_type":"code","source":["import json\n","\n","# Dictionary to JSON\n","inventory_json = json.dumps(inventory)\n","print(inventory_json)  # Output: {\"P001\": {\"name\": \"Laptop\", \"price\": 1000, \"stock\": 50}, ... }\n","\n","# JSON to Dictionary\n","parsed_inventory = json.loads(inventory_json)\n","print(parsed_inventory[\"P001\"][\"price\"])  # Output: 1000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VZ34nhk0pwHk","executionInfo":{"status":"ok","timestamp":1727627989468,"user_tz":-60,"elapsed":253,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"13003114-4f7d-4ed7-d7a8-4efec72ba903"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{\"P001\": {\"name\": \"Laptop\", \"price\": 1000, \"stock\": 50}, \"P002\": {\"name\": \"Phone\", \"price\": 600, \"stock\": 120}}\n","1000\n"]}]},{"cell_type":"code","source":["# Sales data using dictionary\n","sales_data = {\n","    \"January\": {\"Laptop\": 100, \"Phone\": 200},\n","    \"February\": {\"Laptop\": 150, \"Phone\": 180}\n","}\n","\n","# Accessing sales data for January\n","print(sales_data[\"January\"][\"Laptop\"])  # Output: 100\n","\n","# Updating sales data for February\n","sales_data[\"February\"][\"Phone\"] += 20\n","print(sales_data[\"February\"][\"Phone\"])  # Output: 200"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xig7sM3tp071","executionInfo":{"status":"ok","timestamp":1727628007826,"user_tz":-60,"elapsed":283,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"d408a31f-4513-4faa-e7af-b257cdc67773"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100\n","200\n"]}]},{"cell_type":"code","source":["# Safely accessing data in a dictionary\n","if \"March\" in sales_data:\n","    march_laptop_sales = sales_data[\"March\"][\"Laptop\"]\n","else:\n","    march_laptop_sales = \"Data not available\"\n","\n","print(march_laptop_sales)  # Output: Data not available"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hIFjE8sXp3r3","executionInfo":{"status":"ok","timestamp":1727628019255,"user_tz":-60,"elapsed":246,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"7a650027-1175-4f4b-dba5-fca1838fcbe2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data not available\n"]}]},{"cell_type":"markdown","source":["# Control Flow: Conditionals and Loops"],"metadata":{"id":"bWPKbqfRYyR9"}},{"cell_type":"code","source":["# If-Else-If (Elif) Statement\n","discount_rate = 0\n","sales_amount = 450\n","\n","if sales_amount > 500:\n","    discount_rate = 0.2  # 20% discount\n","elif 200 < sales_amount <= 500:\n","    discount_rate = 0.1  # 10% discount\n","else:\n","    discount_rate = 0.05  # 5% discount\n","\n","print(f\"Discount rate: {discount_rate * 100}%\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FtFaLeEmyagb","executionInfo":{"status":"ok","timestamp":1727623626600,"user_tz":-60,"elapsed":243,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"a6a7b82d-ec17-44c0-d47b-143d8bed851c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Discount rate: 10.0%\n"]}]},{"cell_type":"code","source":["# For loop to calculate total sales\n","sales = [100, 200, 300, 400]\n","total_sales = 0\n","\n","for sale in sales:\n","    total_sales += sale\n","\n","print(f\"Total Sales: {total_sales}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qwIipxGSZKlG","executionInfo":{"status":"ok","timestamp":1727623639179,"user_tz":-60,"elapsed":259,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"10ed6228-3453-4d9b-f3f2-abb9e58252e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total Sales: 1000\n"]}]},{"cell_type":"code","source":["# While loop example\n","inventory = 50\n","demand = 10\n","\n","while inventory > 0:\n","    print(f\"Current inventory: {inventory}\")\n","    inventory -= demand  # Reducing inventory by demand each time\n","print(\"Inventory is depleted.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5rYIXRrsZNM5","executionInfo":{"status":"ok","timestamp":1727623650305,"user_tz":-60,"elapsed":244,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"3449c21f-8592-4c41-c1f0-a07a8340506f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Current inventory: 50\n","Current inventory: 40\n","Current inventory: 30\n","Current inventory: 20\n","Current inventory: 10\n","Inventory is depleted.\n"]}]},{"cell_type":"code","source":["# Example of break and continue in a loop\n","for customer_order in [500, 400, 600, 300]:\n","    if customer_order > 550:\n","        print(\"Order too large, skipping this customer.\")\n","        continue  # Skip the rest of the code in this iteration\n","    print(f\"Processing customer order of: {customer_order}\")\n","\n","    if customer_order < 350:\n","        print(\"Small order, stopping further processing.\")\n","        break  # Exit the loop when condition is met"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CiFdmmugZQJA","executionInfo":{"status":"ok","timestamp":1727623662382,"user_tz":-60,"elapsed":249,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"e68258b1-2235-437d-e26c-ef2edaa5f517"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processing customer order of: 500\n","Processing customer order of: 400\n","Order too large, skipping this customer.\n","Processing customer order of: 300\n","Small order, stopping further processing.\n"]}]},{"cell_type":"code","source":["# Revenue tiers for decision-making\n","revenue = 85000\n","\n","if revenue > 100000:\n","    strategy = \"Increase advertising spend.\"\n","elif 50000 < revenue <= 100000:\n","    strategy = \"Maintain current strategy.\"\n","else:\n","    strategy = \"Reduce operational costs.\"\n","\n","print(f\"Strategy: {strategy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GvJKnHDkZVAm","executionInfo":{"status":"ok","timestamp":1727623681851,"user_tz":-60,"elapsed":222,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"f37fecb9-9c6f-4c79-8b02-f425a529a8e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Strategy: Maintain current strategy.\n"]}]},{"cell_type":"code","source":["# Customer Classification based on spending\n","spending = 750\n","\n","if spending > 1000:\n","    customer_type = \"Platinum\"\n","elif 500 < spending <= 1000:\n","    customer_type = \"Gold\"\n","else:\n","    customer_type = \"Silver\"\n","\n","print(f\"Customer Type: {customer_type}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"45P0ViVIZYGN","executionInfo":{"status":"ok","timestamp":1727623694728,"user_tz":-60,"elapsed":241,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"ffbe4f6b-6d6e-4946-814a-8545c1aff168"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Customer Type: Gold\n"]}]},{"cell_type":"markdown","source":["# List Comprehension\n"],"metadata":{"id":"8aJzeQWgYRKZ"}},{"cell_type":"code","source":["# List of sales figures in dollars\n","sales = [100, 200, 300, 400]\n","\n","# Using list comprehension to calculate sales tax (10%)\n","sales_tax = [sale * 0.1 for sale in sales]\n","print(sales_tax)  # Output: [10.0, 20.0, 30.0, 40.0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VGuJ_4iYyc0g","executionInfo":{"status":"ok","timestamp":1727623204819,"user_tz":-60,"elapsed":259,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"081e8236-ae5c-46f1-b47a-759e32db6bc0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[10.0, 20.0, 30.0, 40.0]\n"]}]},{"cell_type":"code","source":["# List of product prices\n","prices = [50, 100, 150, 200]\n","\n","# Apply a 20% discount to each product\n","discounted_prices = [price * 0.8 for price in prices]\n","print(discounted_prices)  # Output: [40.0, 80.0, 120.0, 160.0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JLtErYK5XgGj","executionInfo":{"status":"ok","timestamp":1727623214959,"user_tz":-60,"elapsed":264,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"418f915b-4284-4407-9d7c-08994bc67233"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[40.0, 80.0, 120.0, 160.0]\n"]}]},{"cell_type":"code","source":["# Apply a 20% discount only if price is greater than $100\n","conditional_discounted_prices = [price * 0.8 if price > 100 else price for price in prices]\n","print(conditional_discounted_prices)  # Output: [50, 100, 120.0, 160.0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yi3eg0Z-Xj37","executionInfo":{"status":"ok","timestamp":1727623228877,"user_tz":-60,"elapsed":342,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"8c3679e4-0c5d-44be-91ad-c81f4720ad70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[50, 100, 120.0, 160.0]\n"]}]},{"cell_type":"code","source":["# Original product inventory\n","products = ['Laptop', 'Phone', 'Tablet']\n","inventory = [50, 200, 120]\n","\n","# Using dictionary comprehension to map products to their inventory\n","product_inventory = {product: stock for product, stock in zip(products, inventory)}\n","print(product_inventory)\n","# Output: {'Laptop': 50, 'Phone': 200, 'Tablet': 120}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6KvN_CH0XtB1","executionInfo":{"status":"ok","timestamp":1727623256266,"user_tz":-60,"elapsed":356,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"e49e46e7-9a04-4681-d583-17f1418e01bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Laptop': 50, 'Phone': 200, 'Tablet': 120}\n"]}]},{"cell_type":"code","source":["# Mark products with stock less than 100 as \"Low Stock\"\n","updated_inventory = {product: ('Low Stock' if stock < 100 else stock) for product, stock in product_inventory.items()}\n","print(updated_inventory)\n","# Output: {'Laptop': 'Low Stock', 'Phone': 200, 'Tablet': 120}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ej66Qe9pXvzX","executionInfo":{"status":"ok","timestamp":1727623267186,"user_tz":-60,"elapsed":248,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"aebb9a79-c394-4519-fb1b-d93b2fe36713"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Laptop': 'Low Stock', 'Phone': 200, 'Tablet': 120}\n"]}]},{"cell_type":"code","source":["# Product prices\n","prices = {'Laptop': 1000, 'Phone': 500, 'Tablet': 300}\n","\n","# Calculate revenue by multiplying stock with price using dictionary comprehension\n","revenue = {product: stock * prices[product] for product, stock in product_inventory.items() if isinstance(stock, int)}\n","print(revenue)\n","# Output: {'Laptop': 50000, 'Phone': 100000, 'Tablet': 36000}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3edVBnUZXzXL","executionInfo":{"status":"ok","timestamp":1727623283509,"user_tz":-60,"elapsed":249,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"10d12f85-74ad-4176-a569-7b210aa3f862"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Laptop': 50000, 'Phone': 100000, 'Tablet': 36000}\n"]}]},{"cell_type":"markdown","source":["# Functions and Parameters"],"metadata":{"id":"1S8XZv9gsWq3"}},{"cell_type":"code","source":["# Defining a Function\n","def greet(name):\n","    return f\"Hello, {name}!\"\n","\n","# Calling the Function\n","print(greet(\"Python\"))  # Output: Hello, Python!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MPcZgMyXygLp","executionInfo":{"status":"ok","timestamp":1727628693024,"user_tz":-60,"elapsed":244,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"ee55b9a4-fcb6-4f15-ac56-4735d5097d68"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, Python!\n"]}]},{"cell_type":"code","source":["# Function with multiple parameters\n","def calculate_total(price, tax_rate):\n","    return price + (price * tax_rate)\n","\n","# Calling the function with arguments\n","total = calculate_total(100, 0.07)\n","print(total)  # Output: 107.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xzSe8tilsdJB","executionInfo":{"status":"ok","timestamp":1727628702969,"user_tz":-60,"elapsed":291,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"035b3275-7626-4e92-d917-c9b25b9d28e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["107.0\n"]}]},{"cell_type":"code","source":["# Function with a default parameter\n","def calculate_total(price, tax_rate=0.05):\n","    return price + (price * tax_rate)\n","\n","# Calling the function without passing tax_rate, it uses the default\n","total_default = calculate_total(100)\n","print(total_default)  # Output: 105.0\n","\n","# Calling the function with custom tax_rate\n","total_custom = calculate_total(100, 0.08)\n","print(total_custom)  # Output: 108.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PUES-VLLshzD","executionInfo":{"status":"ok","timestamp":1727628715346,"user_tz":-60,"elapsed":239,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"6eec9ed5-79e7-4772-b8f9-17c7f062591d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["105.0\n","108.0\n"]}]},{"cell_type":"code","source":["# Function with keyword arguments\n","def order_summary(product, quantity, price):\n","    return f\"{quantity} units of {product} at ${price} each.\"\n","\n","# Using keyword arguments\n","summary = order_summary(product=\"Laptop\", price=999, quantity=2)\n","print(summary)  # Output: 2 units of Laptop at $999 each."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3YH2Got1skkZ","executionInfo":{"status":"ok","timestamp":1727628733055,"user_tz":-60,"elapsed":257,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"46318d76-a699-4447-ba14-4cf70c9d4d9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2 units of Laptop at $999 each.\n"]}]},{"cell_type":"code","source":["# Example of a lambda function to calculate total price\n","total_price = lambda price, tax_rate: price + (price * tax_rate)\n","\n","# Calling the lambda function\n","print(total_price(100, 0.07))  # Output: 107.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IhrFLr0NsnDk","executionInfo":{"status":"ok","timestamp":1727628737877,"user_tz":-60,"elapsed":270,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"35e592d6-6907-4b19-bc4b-da9e8f09b928"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["107.0\n"]}]},{"cell_type":"code","source":["# List of sales amounts\n","sales = [150, 400, 600, 1000, 250]\n","\n","# Filter high-value sales using a lambda function\n","high_value_sales = list(filter(lambda x: x > 500, sales))\n","print(high_value_sales)  # Output: [600, 1000]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7fkZQb_msrK2","executionInfo":{"status":"ok","timestamp":1727628753627,"user_tz":-60,"elapsed":259,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"72ddcf45-7fd4-457b-bba6-03e8a50c7090"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[600, 1000]\n"]}]},{"cell_type":"markdown","source":["# Higher-Order Functions: map, reduce, and filter"],"metadata":{"id":"09Hm1bi2tXs3"}},{"cell_type":"code","source":["# Example: Calculating the square of each number in a list\n","numbers = [1, 2, 3, 4]\n","squared = list(map(lambda x: x**2, numbers))\n","print(squared)  # Output: [1, 4, 9, 16]\n","\n","# Business Example: Applying a discount to each price in a list\n","prices = [100, 200, 300, 400]\n","discounted_prices = list(map(lambda price: price * 0.9, prices))  # Applying a 10% discount\n","print(discounted_prices)  # Output: [90.0, 180.0, 270.0, 360.0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v2ryac__yiUY","executionInfo":{"status":"ok","timestamp":1727629545121,"user_tz":-60,"elapsed":247,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"88d7768b-429c-4975-902c-c084cbc81661"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 4, 9, 16]\n","[90.0, 180.0, 270.0, 360.0]\n"]}]},{"cell_type":"code","source":["# Example: Filtering even numbers from a list\n","numbers = [1, 2, 3, 4, 5, 6]\n","even_numbers = list(filter(lambda x: x % 2 == 0, numbers))\n","print(even_numbers)  # Output: [2, 4, 6]\n","\n","# Business Example: Filtering sales transactions above a certain threshold\n","sales = [150, 400, 600, 1000, 250]\n","high_value_sales = list(filter(lambda x: x > 500, sales))\n","print(high_value_sales)  # Output: [600, 1000]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0rtTHQ-wvtPS","executionInfo":{"status":"ok","timestamp":1727629554905,"user_tz":-60,"elapsed":284,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"c108e0d9-dd06-4dc1-a6e3-6c03b331af95"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 4, 6]\n","[600, 1000]\n"]}]},{"cell_type":"code","source":["from functools import reduce\n","\n","# Example: Summing up a list of numbers\n","numbers = [1, 2, 3, 4]\n","total_sum = reduce(lambda x, y: x + y, numbers)\n","print(total_sum)  # Output: 10\n","\n","# Business Example: Calculating total revenue from a list of sales\n","sales = [100, 200, 300, 400]\n","total_revenue = reduce(lambda x, y: x + y, sales)\n","print(f\"Total Revenue: ${total_revenue}\")  # Output: Total Revenue: $1000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTCq_FZjvxsO","executionInfo":{"status":"ok","timestamp":1727629566689,"user_tz":-60,"elapsed":246,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"d182d1ac-d55e-4eb2-d891-ff098e44d09f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","Total Revenue: $1000\n"]}]},{"cell_type":"code","source":["# Applying a 20% discount to product prices\n","prices = [100, 250, 300, 400]\n","discounted_prices = list(map(lambda price: price * 0.8, prices))\n","print(discounted_prices)  # Output: [80.0, 200.0, 240.0, 320.0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I5BrTI8Nv0k2","executionInfo":{"status":"ok","timestamp":1727629585243,"user_tz":-60,"elapsed":253,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"102013a5-1070-44ac-9463-eecb7cf57ffa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[80.0, 200.0, 240.0, 320.0]\n"]}]},{"cell_type":"code","source":["# Filter products with profit margin less than $100\n","profits = [50, 200, 300, 80, 400]\n","profitable_products = list(filter(lambda profit: profit >= 100, profits))\n","print(profitable_products)  # Output: [200, 300, 400]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RzCZ4gkVv2-V","executionInfo":{"status":"ok","timestamp":1727629588271,"user_tz":-60,"elapsed":253,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"760ea4ac-ccd0-467e-cc14-89dda02d737e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[200, 300, 400]\n"]}]},{"cell_type":"code","source":["from functools import reduce\n","\n","# Total sales across different regions\n","sales_by_region = [15000, 23000, 5000, 12000]\n","total_sales = reduce(lambda x, y: x + y, sales_by_region)\n","print(f\"Total Sales: ${total_sales}\")  # Output: Total Sales: $55000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qk52CMSUv5PU","executionInfo":{"status":"ok","timestamp":1727629658095,"user_tz":-60,"elapsed":267,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"59f821e4-f27a-4fcd-8c9d-aebb4a58aca2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total Sales: $55000\n"]}]},{"cell_type":"markdown","source":["# Generators vs Functions"],"metadata":{"id":"09opc08dwFgJ"}},{"cell_type":"code","source":["# Generator to produce square numbers\n","def square_numbers(n):\n","    for i in range(n):\n","        yield i ** 2\n","\n","# Using the generator\n","squares = square_numbers(5)\n","print(list(squares))  # Output: [0, 1, 4, 9, 16]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQuiGhNmGG3o","executionInfo":{"status":"ok","timestamp":1727622565957,"user_tz":-60,"elapsed":7,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"cac95f80-b118-4457-b513-002931c96c0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 4, 9, 16]\n"]}]},{"cell_type":"code","source":["import random\n","import string\n","\n","# Function to generate a large random text file\n","def generate_large_file(file_name, num_lines=1000):\n","    with open(file_name, 'w') as file:\n","        for _ in range(num_lines):\n","            random_string = ''.join(random.choices(string.ascii_letters + string.digits, k=100))\n","            file.write(random_string + '\\n')\n","\n","# Generating a large dataset file\n","generate_large_file('large_dataset.txt')"],"metadata":{"id":"UgAwR1BIHZTF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Generator to read a file in chunks\n","def read_in_chunks(file_name, chunk_size=1024):\n","    with open(file_name, 'r') as file:\n","        while True:\n","            data = file.read(chunk_size)\n","            if not data:\n","                break\n","            yield data\n","\n","# Example usage: Reading the generated file in chunks\n","for i, chunk in enumerate(read_in_chunks('large_dataset.txt', chunk_size=1024)):\n","    # Process each chunk of data (Here, printing the first 100 characters of each chunk)\n","    print('chunk #' +str(i), chunk[:100])  # Print the first 100 characters of each chunk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vZ2oGgi2Hilq","executionInfo":{"status":"ok","timestamp":1727622565957,"user_tz":-60,"elapsed":4,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"122b7c4e-cd14-4c9d-9e9f-bf1acbba75ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["chunk #0 g6Lw5XI3Xj7LgX1JwFBGjEARRzaqSti8BkPyC3cCvECw5AaNG5EZAPhoibJ9AbH3bDrzugQgqqiNn3m3hO87mn7JzPYzqquNZDsX\n","chunk #1 Yg4ilf0HjIkQQ9G82oru7vZbT5lQ9o6u1GEWYaZrre0hOCqNZxjm1fCTShBxC9PIMSF5Qgy4UvxQ2Y3twmbZuB\n","oOsLOYAJ9GQvW\n","chunk #2 PMp8gHvrPlsPHGsRzDbSz6WlLgQVNzoPHtOhvpqv0Z6qDmibYLCspS3L5CtusOL1ZKoBAih0\n","jkqssyQSlvsn6qzQZcYMmjvU0Mo\n","chunk #3 vbyHtXimjxHXUu3cJAIcMf0yzFTDf0UkOeVjfPmR5oatrVI8ICWy6OaNiM\n","AjOfwXWlGZzUc77NIqA0CF3pA57PrW6tVTbDwR1iF\n","chunk #4 IaBoLn2aztU93i5OktFRyqbVD5jO8xu491Lw4hoVN4Ea\n","D8dOC9PrUd0U8OSmrZF0prdRlj59mKJwUMFqe6GoPot9Q69f1hR3Ssi\n","chunk #5 q5BMv04p0B7pHhTTTLOiamX1eoapr4\n","kA2Amp2TmyNViuowaREGmsSRjBEDxQcMxnwgmIyNsQORtS3ElwOaoCq9YWPdtiImL5nkx\n","chunk #6 vXGMwa0cBV7ENJWR\n","OLmgd7V9GoWxO9S28yOUke5I3s1jMIkTSyCBwyAH60qeSLAe8lyY5rkImNAtze1eKfigtE1fLxTWHGVBTUE\n","chunk #7 pH\n","zroDCgmUjR9VFRgfFkBikRRG2RwiX5btx5x9i6fyb9lnLtEerYaqPaVlMKHmv6Yh2Nahrfe1iPjGdvGZ3u7NRWFmnBYOYeQ4v\n","chunk #8 G9Bfd4Yw9IMTrtg22BN9av4MYcAJKxShFkATJ5ZQWwrwIKLdfCBXGcswP0dMkas6lA4REG8KdgaXoaPLeeVCFlpru\n","yYq1tDxpBD\n","chunk #9 HBKh5PJL1hPgpA6qUG2BDecUosWWooK2UurtvKgDG4XoHXL877ppuY9UjKHeVvL4ZC47kTBBBw4\n","1aFHXmlgLXDaOJQFYnvMu2dc\n","chunk #10 V0jOdWDDYBcRp2BClUCkemDrRDPih4mDmHwYwWqZjHRg2qVA0SUvzNEkI3fo0\n","CJSlfI0uqAcCPVwr7u3ODKM9bCsekiPPcy4p8y\n","chunk #11 1qtL6xoPw9yJmA8wAxAUrosUiH2KpA9yiGGddW0wAto6vU0\n","63PHXbSziAvKFTQsFKyNCAIzjzcc2dTTNvuEMRAUxHthVIH6xqpO\n","chunk #12 VosdOJeNt4HY25jEJtlKZNy2RJBrfTcmF\n","X632xZDAwX6pFPvy4FmOyVtKE1lohWdDOpdsrZG5BHsDfFd7xtNaXCqoXY6Qnu8LtA\n","chunk #13 5lcPECUiccEJvAkezJL\n","GszJBeqY8WzsGITQ9MoAu8v1GAUzNQtBQ8VHptDSZDWOXRSg1quFLc0hozJ9PH4Acu9yUwes0eyL2MFG\n","chunk #14 MKGo1\n","P3AIACar6Yb5KyxLxWGeWzV74HG4Svkuf9jZF7xATAmKlvC3QWGsFgyvfoWmy0vo9eYrqAsNMFZb2SUS4BFRR4eLEwzDYf\n","chunk #15 ouI4AJJCOfk19a7bwbNtnpNBUbekRscbUzhCS5YpS3LpWGLDR7S3YR3H9GteuorfMeLQ9sQyfqHXGGSGr99OGweHzu4Y\n","K6GH3BL\n","chunk #16 PKeDb8lrsugKFWkCeKxcCZr4Sgsd91tP01tVMCnTMmkg6ESkEgTmyYsSiTzHkuiuVeT7aAFfQCD6rh\n","aCCjsjoDXs3GMQMKF5YQk\n","chunk #17 VaogGgd62VPtSBweg8IRgshPPQq4bLpm9gvlKPMOlKWyz7gZTvsXM7nGlE1hwRHB\n","gusslIbUjEt7kzsssJhi17Lau5QFlbkcl4X\n","chunk #18 CHMRwPHliZjJDPTcnCncnlfqQ6OfvDf8LU4auSoldrkiaizTrF\n","ZlLQhtmXTkSYyASvlbAdQvuMkKKdrFe3JfsuAuP9eRqJW5wzO\n","chunk #19 mD8h0eDXkQ6F82cQGFFXmNK6mG9BrQxDvwYX\n","eu0UFNqOn7x9aSiFMKRsCDm89FOxeO2EnWDA0uO3k6yYLUSNgIPUEltlFC1Yb86\n","chunk #20 dOmhkM9fsMXaTk7FRzFwQ2\n","9NovuhkbmosuoDquIHyzmpOuVmbFQArHKM74ZOO8XG3FWuaEpkUt4Z3lmeVK4wfk9cvjEhAneakFy\n","chunk #21 bzyb0TDz\n","x3L9eZ0k6NTwn8Lh30HZBqkxDE8pvmFG6aZqpMO4bZMWVhq0jyRvFzk1rbwo0whdPVyRIe9YCBGAiyxm1n9RyDLp6ay\n","chunk #22 0cQFq7oxaYkai6gyK4oww2YIPnbEANctBZaiF5xWLpvookB4lJIC67bTxAMvADZkeSpq7b6F59RTexsDlQtGVBI6cHiHw64\n","I5Qu\n","chunk #23 cKeDlqwB2eAGSthdWgCMhS7ayvrTnwHM7KGX7OA2BcCZmcA8mP9Fhum5MI649dxK4akXWQBOjrFfjLtmo\n","3Wvm9QIfL4OXsDmnYt\n","chunk #24 fOiWEYTdld4DmFfKrItBQ5O9UVqHOb3vnYIZNwnvRUgSisbxkRMPCxsQ8mgfkm9nom3\n","WG7CuTURvYTye73q8NL1Qn425Y84FrZS\n","chunk #25 6dikxoedwJYPGGSKxTTqkdmR0WHDku9MnBj65YhUgUgL4JNkxR6p6\n","vAFmG5Jk4TZAaYt2v7gtTDt9kXSfp2t832KFub0s3ovZ89\n","chunk #26 DWS88vNrc7ZqIpFYGxSvCAMxAREsT3ZIf1tPWh0\n","p3M1wx5hgfeL7By4dJvbQdw34GZpG4zBz92PjLnnoFBu2S5MOGCmmdRLC83z\n","chunk #27 5ulqjDc7KKU3vhS1FdFTQ8qsQ\n","h2gKg64qlNsR39JJo5V372Syizp6ALZngVWmr9SntBRm6Z6LcaMAfVgLEQeucYR8zZi9eVC10o\n","chunk #28 XBDjoQHRaSb\n","AfvZOVLaeU71SpR5caLLcXl457zWCI9yFBlwpLh2ZqZRup0F7RPWkQhtQW0mVupHveb0vnZ7Thrb7LlATu2UpgVQ\n","chunk #29 l51SFhgQXpVseSPyYw0IUb4NBcX0gF0UqHv4yAY2192vVFsWcHMmp3mW56y4o09UiRSVD7VZhtxKulPb9QFFDZE8C124uyzgbX\n","K\n","chunk #30 4NpxiNUwzbqawLdgTb7U3yzvWcy5alkNZGJyFTSxlegxhs5wFZWDirj44jEuQ5p3ZCKe52jwThiIQQc0PLGa\n","mx8BvKZaSm64CGe\n","chunk #31 21A8rxV3mIIe79krw9jA5He7iZ1WvlnQ8j0WSw3fsDVWaWAmtJmL0Y26EqCOqPX7fdwnXq\n","v8wBzcW1f2VaZi0BJyghn3Z1vX25O\n","chunk #32 PJJyClMn6aljAhUOHAKnslE4dsqYIlNd3C0ke4lcj8FYXONaqCyQzUGe\n","JrsdAWObmpI61ujENtjwXKjXkJTJqqmhbftPYGRbdxu\n","chunk #33 hDOZGFfksfAeKYSnsmWGwqmOgbUAYybrTvppQamjfl\n","otAkb2BSnnll777UScEzkIYcL0sCQa56WGcgrMLtjAahlH4ZVgwglAIPg\n","chunk #34 XjlWLSvHbKKd8rsmEchsYUmmidPI\n","nMBsxohFI9tSiVyRFQZAvm0OKp3HCLWaK36V33wzbnAXr5WydvLP1lCe4id9OwQGp2MT42w\n","chunk #35 ap9rCAPiaSk7LU\n","vDxUMrx9Iop80EwQrTqvgRHqLKv4GCozBb8nfwF4xQzAMfS9ZrdlYvFOTMdIJiYUppV3E7UUWbmbIbmotpUGL\n","chunk #36 \n","mFY6mBW4VOUMRF9Qpwyfg2ylQecaGmPxFlipBv9YzowLCxPRYEM4ENyr2UQCwFx3L467AwC0K3aGZiC6aQPoL59BlRYXc4IG9e4\n","chunk #37 LsftaTm3ZErCyZ9rctYirvpKevCwvb18fqzpg07XJ7Zgz2mpSvvpkBGrDKFTMHfvllyht1ZOLcSpUcNdvT8A77D\n","l1YgsIJONvNu\n","chunk #38 NNVQglpDlW3NlFmnOyiIrAujyyj0QqgMVa50a583s8z37i9ojLgmOPNhGhu0r0e3dS8rFTCcm\n","q2xqXDnE4Z7ioPQq6AIclBZEmA\n","chunk #39 D2YOn62NySTo2vtYqH5lIMJ5bjDbhKT7NgoaO6EZFeHi9YcEfQiN2C0NTkM\n","LaUmfclJ12u114cqlcIAiqXIGWmIh6Dx0OWoTd2u\n","chunk #40 tk2Ak4ep6hDwLt34GGszt7rGIGzMSRMnBxAoCZUG0k0y3\n","oqNKmOECBYe7FVL407wY62VuZBGkJ8q6HICLD5iI71JnfbQ1rhiMMz\n","chunk #41 FpMzvRfpHa92BXBVNPYmYK3gBTxXxT8\n","qog8dXziXDesdnZGgNk9fU3AT6ZLWqbtdZ2V1nSQpQpon4PjUUINd4EiY7zIAwZPAruv\n","chunk #42 Kbx3QzlEoFQDvWmqO\n","OuHacdr9dYH7R8zDN6dVbmzdMKPPgkwgJAIeUR4C9OZQfreP3Wdy1GTAiBhVNafAp4h8l6YRxRr6S22zsJ\n","chunk #43 WIs\n","fl9D2sbc30Z63ez3XdzZVfBS94iRWCGvq1riIk3YXQUe0q22fU8qjKWdJUl4NZxk5bGuWtl7CtWLS1XGdQa6DYnLsr0Ao8Ap\n","chunk #44 N6ZbqFbApFFTuoruWsssW4sdVnpxhgocX1DFXbr5Gm2hhOJttT1MUc77biH7Ydca2p0GIXRHv6jSOiwVrY38GnrY0D\n","F6DzDV7AZ\n","chunk #45 dIB482zS90FjROObpKIVqsWwL6qypEPu8L0H3XIn7LGqiA0Fq45zu85jvbRTYyNEQBZl5ULTYB7B\n","3u3grobeAwCR9Qn3rZhm8c1\n","chunk #46 oIgqZqAt98PSbvFTgMJqUnE9HUnANURyFX7xOXnLxqbT08NRtNvHuitamQYuKU\n","iTQW94g9UDrJZD84T8Og6zGV5TDa6yMmH0ZWl\n","chunk #47 kjRNU5Flp4xmDkU8VXEMPi0n25AXsILnirIQsNegZpMmJBoV\n","QKTK8jRvD8ueHlHgwXu31USchRWkc8hcwxlFISgGXjQf9L7CGYj\n","chunk #48 zwITYDMtTiV1nA814TASQIlyR8pmZ3iJ7o\n","Ce8dJXY64ZhoMmLppdEvqztPPcgwUPO076LanNoaaCd9xZTHuHelGwtqWmafN1pm2\n","chunk #49 in1tPqI0ZwxQANgLxhOl\n","eWIrpBPmyaYPnvoNPaAmD83hhoUAfRImlH7tZJbtTIWUMbLSZxE2ylxUubiAxn5Y5djPrKAGGGcVg17\n","chunk #50 zubUyD\n","27ChysTelAdAalXyLw2PepkOsML4Qlz81QU0bXqDiBYqSAUO4xrCli8x1K416ThE80fAB4sR5pmR4KGKTXzFOsfSRmSz2\n","chunk #51 VaFaWvdbwxSqY3qmDIcjWo342hy5AXNTsbdXGCTkzL3zXDF9I3SwkTrjcZ70Ql04Ag9AVm0f8piJLOxJeR9hOohca5pKU\n","4vhMn8\n","chunk #52 26W70CiKspXxOOSJRYW6FGSLZDtl5GEdWWR6n1ZCIOkDYhXRCGozsRIFFAzDc84L2vrSAxSBwJZUCb4\n","unxjpp5FmN2jBpj0TdCR\n","chunk #53 7fkxUsjJjqfvYNwdzxkiWcyL0sGBXkVFdfK7B0BsfgvAFleMGTQzDzKErIn53UiCa\n","dsd7lUxwmbrrTuQxHirm2pnRMyi9sGuSWK\n","chunk #54 uvMSHHBlOpms9W9FCvAaM9Hg8MQmoKUDiC7O2ZBbdJDwGpjk9Yz\n","uCKYf6ionHNurqhCjS0l5L3ykNQB0tybXGEyxXtVR34DEYyi\n","chunk #55 wXfoSEp2UuCrY8OCMR4mUFY0bVV81CeP8f6Va\n","AOrJ0jpMCP8Dw4R1wrZyHRkOfVbwR5MX9Cg6bKd3vsDsbO1Np5es0qG8mUpT7J\n","chunk #56 JCvNJovLEnimhnl8GB1RRdK\n","BtzaA3nfmBN8tj8FNmXlXi7OKchZtjTldCurgOYS2L4eXTwepNP1je0xBasGoyWms2Ioufhgq6hH\n","chunk #57 Ip2ABm4IY\n","quxPULPupuzQHb5c8xc1QSjpOlLnJQNx7wM00mYmW5IeDX3sDay7WxazaDajsNhH4LhwjEHKUStSQ87DxnBZ32adxz\n","chunk #58 ULqrfsTfrPCSSAkulF2kfYJ5pjUw5dA00cAYpZwh9pqF4g49x3FMRHkqTQN33PTsHvABUwd1y8TfdYG8znuc1S0DkDWmFGv1\n","sc4\n","chunk #59 sY92Hpbdwc4Nfp4p0rGSCeWtEhb6cIuMahACWZN0tndeHDA0zCGsFMjlTEg1YXMtjyxwTIN16EM2ACpZld\n","faMDkIvr5pXZ7lX5T\n","chunk #60 6JCGa4bLYgVjPE3T17SSgFAMs7PkEI6fBgvF4JodYNutD1NJQHWIUzm7SJQYH5xNb1uZ\n","m19NgMZnHXJxJbbra1OhjASUQizOVJg\n","chunk #61 FXoeuyz1x0aQjKbaxhoudQRH5p6FKOMXLkkEOSRGLsSKAKOHR9MS9d\n","4PZj72gBPNyliFtLFGkuafkApmSOiPvY93okGABVVi1uE\n","chunk #62 BhoLAUbsaqJLC74TyCQGWZLSdQXvUl8EtCq0if1I\n","1mnuWCMhbkPa5ICkDcDmFNXA15axvlcEHv3N6N28BDKMcx9Z4gGMlhw4RR8\n","chunk #63 TjPHiSqQ2RrC5Yxe1qop1CitcF\n","HQOCMYZB1Pzehocd6xOfKktDwGIqdOESklciMbECusa1dy6cyLe43Fjq4pp9EUrREHDWPVQqV\n","chunk #64 C4VNGTg7i6yy\n","O1aj2q1Il1n8ZSk1fr3i96eDPCuXRzTRZtIBIZonE93WSltjfcXdowdub49QCHlfKoVFGY5yVvkbvT57iX3v9sb\n","chunk #65 NgNk9bqzzuEavQ2CamA0f6toMTtWEqLa2aoWW3j6Y65bMqWbslWM0PhoHWIm38rCMrP3P4vTztnXXdG7VKtcRis4hVZbkzoSiVs\n","\n","chunk #66 Okzc5ZpqRsEOWMc6qu9RkilIXnGGm76F5d3QEM7GKeKY84OGoiCBWaFk7vOTOwIN1S4Ev2vmRzjjqXXRUmsAr\n","3kq2yRcqH06yLO\n","chunk #67 Pzs44gXIfUXHGSkydVpPbuWhITrVki01CSb7EV4okILWSOdFxRVcUGllrCFr2PJFhqEeiUT\n","p04x8oJ9P1XDIN8DT86cAivzHbfG\n","chunk #68 NGOkv63Gh4Zrkwzp9OwWnUQ7OcmUcrPj0t0ZMkLwHM6FMureQMGnatCHi\n","f1h8p2WLE8QlNisxJS60wDtsO2sx25zglfghegy8Jv\n","chunk #69 ubePROmqw5xWas7cnEYV83Jqn0W8kk5wULeFhmGhY8n\n","3aVpcB9GW0gXunprh6xD5cz6AmlKMpIMAf9KqkpYxWlbGUEEz5mhZlZC\n","chunk #70 kwIPR6TQWguXrJkYVTdDqiAoHaMo1\n","TisS9oBMQU6HCC4WhBK8Z5NBjd8L6p2wgwSafmI0MZk9UJ4rNT39rgn5NMYgFpJISlJEFo\n","chunk #71 SKr2nFHA3CNe8Hw\n","i3auk9xtLWviWEdrhX5dEJF1Z3jrXiGOOcZxNP8fF8zVWTrCrKcPYEld3MvtsZ8UmpbsFRYk4zUdNSatMgnG\n","chunk #72 E\n","U4ciLd95Ax8KzKchNPCJ0y7pLnAZbdkvofQr8zfxlgj2EsserZ1fBQrEJJ4fumrR7pPW3XJk8P5kCyycmNSOHwVk41Qv5qJggm\n","chunk #73 rDQmAfbkJOq9xqluRPJfr7kNnJ1sAzz9RoYTfToVETYYmYBuydACoMvaAQ73Lp0O9kmD6oMvuN1mGGtqScQjAub0\n","UfMzBrGXou9\n","chunk #74 pqlUAKED1wBiyojRxs3XmTVlmgaCplcK5OJLhNZDsLVQy4mn6f5by1KVi2uTPNeImkBkmU4Smi\n","Jk5mxS0TjDCocphytbYYux2Uo\n","chunk #75 krjEQXR7302vRQS8LboQvu1tcWLEJYKJYnChym5W4kB4k8aYcjiZc2qoiGzE\n","rypKsw8beOdcc7OW3U50RQCtxpIWkLacocVKIYO\n","chunk #76 PRWCB5vWWiga2ByUwBls2MBDuaY8hEREJTqb60mQN6DLsk\n","JyK8GfyP1SGxakPrGR7qmSDLTgBT5xQsptxJ1XKPNeGnaTIAQyS9n\n","chunk #77 rHFr5p7SNC6fNs3EXtdILVOBYUA72QlR\n","HPNz1yFTLC0aRmvlgBMTpOLTNsvCh7BBFHumnpe5uAjOp15Vptjp0CrvKH2Mi96afID\n","chunk #78 5i3wWU0C4nX1DRaugy\n","Jf7l1qoUdlQBdM4SzUw2ax0nXnnoHSHorxLFoksYspl48KhqwJfzkdmQzntAEYB46efmnyboTT9dQOZqz\n","chunk #79 Iuk9\n","amZNuV9UBgF6V2UcFG4wzMlyzJiFfCn1Ib2MWOSs4i4tQuWNXVFHSkg2uFZPVl5pIJHKjMWU0p2vcG8OudVCUFgIbGN59eB\n","chunk #80 2aF2d2CMeSpLpS3ChRtqJ9f539RHv59zm98j8oXHeLtNfsRCS777dWLTYFicWZ2pwTMWCbk39eB7SBCHAWU4OI9NI02\n","EtD7Oena\n","chunk #81 fKkWernburC4lGubnxl7TK41vp4VqQHnDxdBGY14WgzsMf7FrxEtDEZ4m3zGo7fFOpj560Bulammh\n","VBL3XN5phSFCDvxE7hB7HV\n","chunk #82 TqShzzphd3gkWgpQ0r8o3c2cl9GdtS3zZlF4se2yRrj86aTMx2I19OKNZqjAzTa\n","VUOwxsGaD2kxcz2I0nRhAzJCTJHS8ZQQnyFo\n","chunk #83 Gas4Avduv4Gy9cJCBUz4DoEyioSLTG9CDktlRqSOlvQEQfb56\n","fzezwD0ueBu231q3pB6lJljUbqkhLBucz9Uah6V68sGslytQ70\n","chunk #84 BaGk0ZUf5or2z0xQ9bJc3uVaNa98Pon0L1C\n","LxDayCGs3gqW6ulongZgZHNkXaVWFEio6qFqZI7LJvR3qKMov31by2lx7aQ2KsGY\n","chunk #85 bHeuRuvVMKsGumKYT6sjS\n","0hAIOHSH3qCJSBgMUAdXVf8Qa9RYk1oQOsNf6NnL925kSDCS9fJxS3tElUrzJB6OfvcDjcjA4xfrsQ\n","chunk #86 zF9oMmN\n","YzT0b47stt9ppXMLcaEG43zIzvJ4mKhfTPEpCS3VRTrdi3OU5HMzrURbMsyPw9tj91Rdav7n7TtxehHenl99TR3PvneY\n","chunk #87 BeJtl8o8sdBxVCwDzd1WvxJps3cp6KyuEuVwRAWWpOVyS6XZ0xGMZda8ZUjQLIc6h0vk6TY0xptrMbQTxuXyt6Ct4n7NzB\n","26dZb\n","chunk #88 0BwocBmmVVm3Qpjv4XLA8KR234mpz7zsfZWrVhR0hQi6pymMxUjuP2YRTUVPsiQLTmqgUmNTMYZh4rIz\n","Uv8WQc9BgjCCLowqK6Q\n","chunk #89 ebqmZmVfgICF2beJddBzqSgUho9SbsHKFGgi7XVDj5QObGrlUxTa5ngdEvvwElegkO\n","ZGroe1Ze4np0lPCXjRFdMh9ejIunEPrVz\n","chunk #90 mJhwH8Wj3JPuHpuNwph8tTBQcCWxG7hF4gUWSGRsMYpmXtqZIggx\n","b04YG8dv5cOwV5F6hMgzJQQwSzPpcga0iSrcUARmqYIpQmv\n","chunk #91 aWmbcUJFwbtGmgtaicoECyVs2BFNpfnukPiAfD\n","bAIe6TzeZ6ouyfuVOsyhKIha4ny5LvUjo4UYufT4zNHRSmAkKXsQ7KzDW9mdv\n","chunk #92 pg5yD2cK1TpNP8aHG2T9kD1G\n","GTrRKRMpPYnp7GHxqV1Ix2rfastoNltNPTTekWk9kk0yr6HNBJjuxMTndEDzBhRnXKDZlp4QgEw\n","chunk #93 TNYcXKY8rp\n","xYjKwX5CRR7RwspDr8vQ8G9UMNvcjoMM0mW5GFxanJ9PF0Vodxf16tS2OTOh2xEB84IBRi00L6j52Iwl8LYMyokkq\n","chunk #94 dr6kbsC4SJKGZeJFsA4zYzlPvJGC1YxtsBvxpR6yPmQbsPc5hlxm2itA9xNg6k86OvieIksuIg0vgARiOikKFln1i9UStRewP\n","aV\n","chunk #95 zZeJVjeiMQWTrIDWRCFfTmlYdHTRMvDnktHWPlsi5QUGGEiq4ZTGRI3I0RVDPjrqxbfEoqka5Ewwt0D659y\n","JFSOEFOihY8rArZJ\n","chunk #96 j6jFXbdn6KcCxZS0n9XFA7yN9ooKxBTfcyaMITI2d2J11Z73Ct9wOTCcZXLCPpMt7dWiZ\n","ANid2ttEL5gWC7Nu2M5WiXoPw7dD8I\n","chunk #97 sDitxhj9agsZh71LP8whpI32Il9U9Wbkr8Y1jfNe5ahhVFGEQ52mA0e\n","7meEDdEnkHgDIVxmMJDoUyzUsVIE9Cnk2us2cD3uGu7X\n","chunk #98 Lz1WUWKeRaYHXkG3AyakbicxzqbHxLtaQJaNGGod1\n","Nn4jlhd8ZfWgpzvZ8keDRr3vZGBAoae2LHjrROpgOGrer1oMQgbwefxqBv\n"]}]},{"cell_type":"markdown","source":["# Using zip()"],"metadata":{"id":"1onhlTI6wQd6"}},{"cell_type":"code","source":["# zip() function example\n","names = ['Alice', 'Bob', 'Charlie']\n","scores = [85, 90, 95]\n","\n","for name, score in zip(names, scores):\n","    print(f'{name} scored {score}')\n","# Output:\n","# Alice scored 85\n","# Bob scored 90\n","# Charlie scored 95"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X0E136b9IOVH","executionInfo":{"status":"ok","timestamp":1727630615551,"user_tz":-60,"elapsed":259,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"49201fff-54da-4fa4-e673-9df59020fd70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice scored 85\n","Bob scored 90\n","Charlie scored 95\n"]}]},{"cell_type":"code","source":["# Example: Customer names and corresponding purchases\n","customers = ['Alice', 'Bob', 'Charlie']\n","purchases = [500, 750, 200]\n","\n","# Pairing customers with their purchases\n","for customer, purchase in zip(customers, purchases):\n","    print(f'{customer} made a purchase of ${purchase}')\n","# Output:\n","# Alice made a purchase of $500\n","# Bob made a purchase of $750\n","# Charlie made a purchase of $200"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"86aVFoo3zyhY","executionInfo":{"status":"ok","timestamp":1727630624640,"user_tz":-60,"elapsed":355,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"e9c074f1-a346-4185-903a-78ad87ca1db6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice made a purchase of $500\n","Bob made a purchase of $750\n","Charlie made a purchase of $200\n"]}]},{"cell_type":"code","source":["# Example: Product names and their respective inventory levels\n","products = ['Laptop', 'Tablet', 'Smartphone']\n","inventory = [50, 30, 20]\n","\n","# Pairing products with their inventory levels\n","for product, stock in zip(products, inventory):\n","    print(f'{product} has {stock} units in stock.')\n","# Output:\n","# Laptop has 50 units in stock.\n","# Tablet has 30 units in stock.\n","# Smartphone has 20 units in stock."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vA2lUKZBz20U","executionInfo":{"status":"ok","timestamp":1727630637082,"user_tz":-60,"elapsed":285,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"8d690baa-4c7a-43bb-eed6-981dc1f04caf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Laptop has 50 units in stock.\n","Tablet has 30 units in stock.\n","Smartphone has 20 units in stock.\n"]}]},{"cell_type":"code","source":["# Example: Employees and their performance ratings\n","employees = ['John', 'Emma', 'Sophia']\n","performance_ratings = [4.5, 3.8, 4.9]\n","\n","# Pairing employees with their performance ratings\n","for employee, rating in zip(employees, performance_ratings):\n","    print(f'{employee} has a performance rating of {rating}')\n","# Output:\n","# John has a performance rating of 4.5\n","# Emma has a performance rating of 3.8\n","# Sophia has a performance rating of 4.9"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JjGFwXW-z6tW","executionInfo":{"status":"ok","timestamp":1727630651789,"user_tz":-60,"elapsed":258,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"2596d789-8b41-4c9c-b68b-8f4b0a062ae8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["John has a performance rating of 4.5\n","Emma has a performance rating of 3.8\n","Sophia has a performance rating of 4.9\n"]}]},{"cell_type":"code","source":["# Combining date, revenue, and expenses data\n","dates = ['2023-01-01', '2023-01-02', '2023-01-03']\n","revenues = [1000, 1500, 1200]\n","expenses = [700, 900, 800]\n","\n","# Calculating profits for each day\n","for date, revenue, expense in zip(dates, revenues, expenses):\n","    profit = revenue - expense\n","    print(f'On {date}, the profit was ${profit}')\n","# Output:\n","# On 2023-01-01, the profit was $300\n","# On 2023-01-02, the profit was $600\n","# On 2023-01-03, the profit was $400"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EK8nsGA_z_C5","executionInfo":{"status":"ok","timestamp":1727630669689,"user_tz":-60,"elapsed":234,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"20cb3fce-2219-4b23-d2c0-599e593d7b95"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["On 2023-01-01, the profit was $300\n","On 2023-01-02, the profit was $600\n","On 2023-01-03, the profit was $400\n"]}]},{"cell_type":"code","source":["from itertools import zip_longest\n","\n","# Using zip_longest to handle lists of different lengths\n","names = ['Alice', 'Bob']\n","scores = [85, 90, 95]  # Longer list\n","\n","# Filling missing values with 'None'\n","for name, score in zip_longest(names, scores):\n","    print(f'{name} scored {score}')\n","# Output:\n","# Alice scored 85\n","# Bob scored 90\n","# None scored 95"],"metadata":{"id":"9f6Euiyd0CpQ","executionInfo":{"status":"ok","timestamp":1727630684625,"user_tz":-60,"elapsed":249,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"ba222e8f-bcfd-443b-af4a-451dfd8e1c56","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice scored 85\n","Bob scored 90\n","None scored 95\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Creating a numpy array from a list\n","arr = np.array([1, 2, 3, 4])\n","print(arr)  # Output: [1 2 3 4]\n","\n","# Efficient mathematical operations\n","arr2 = np.array([5, 6, 7, 8])\n","result = arr + arr2\n","print(result)  # Output: [6 8 10 12]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dW4f61-9yknm","executionInfo":{"status":"ok","timestamp":1727622566599,"user_tz":-60,"elapsed":5,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"b312fad8-9bb5-430e-828e-7e56ae5ae036"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n","[ 6  8 10 12]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import time\n","\n","# List-based operation\n","start = time.time()\n","list_data = [i + 2 for i in range(10000)]\n","end = time.time()\n","print(\"List time:\", end - start)\n","\n","# Numpy-based operation\n","start = time.time()\n","numpy_data = np.arange(10000) + 2\n","end = time.time()\n","print(\"Numpy time:\", end - start)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"coZ1W2IsynqS","executionInfo":{"status":"ok","timestamp":1727622566599,"user_tz":-60,"elapsed":4,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"8488cf42-7a2f-4270-97ca-eb64fe13efff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["List time: 0.0015530586242675781\n","Numpy time: 0.0003135204315185547\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Creating a DataFrame\n","data = {'Name': ['John', 'Anna'], 'Age': [28, 24]}\n","df = pd.DataFrame(data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s055umW2yqI3","executionInfo":{"status":"ok","timestamp":1727622567402,"user_tz":-60,"elapsed":806,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"941556a6-a137-4800-ea2f-0345b49bff53"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Name  Age\n","0  John   28\n","1  Anna   24\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Example: Sales over the years\n","years = [2017, 2018, 2019, 2020, 2021]\n","sales = [50, 60, 65, 55, 70]  # Sales in million dollars\n","\n","# Line plot\n","plt.plot(years, sales)\n","plt.xlabel('Year')\n","plt.ylabel('Sales (Million $)')\n","plt.title('Company Sales Trend Over the Years')\n","plt.xticks(years)  # Ensure only the years in the list are shown on x-axis\n","plt.show()\n","\n","# Scatter plot\n","plt.scatter(years, sales)\n","plt.title('Sales Scatter Plot')\n","plt.xlabel('Year')\n","plt.ylabel('Sales (Million $)')\n","plt.xticks(years)  # Ensure only the years in the list are shown on x-axis\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"YwbJo25LyuoO","executionInfo":{"status":"ok","timestamp":1727622569021,"user_tz":-60,"elapsed":1620,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"3935274d-c62d-4c8c-8f81-ae2db0f13e82"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Customizing the line plot for better presentation\n","plt.plot(years, sales, marker='o', linestyle='--', color='b')\n","plt.xlabel('Year')\n","plt.ylabel('Sales (Million $)')\n","plt.title('Customized Sales Trend Plot')\n","plt.xticks(years)  # Ensure only the years in the list are shown on x-axis\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"6mqTEKexy1JI","executionInfo":{"status":"ok","timestamp":1727622569817,"user_tz":-60,"elapsed":804,"user":{"displayName":"Atif Qureshi","userId":"15454764679080825954"}},"outputId":"d1886564-04e7-4cfd-dc1e-6624ccbd3202"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"s_bhpVKpy5Ux"},"execution_count":null,"outputs":[]}]}